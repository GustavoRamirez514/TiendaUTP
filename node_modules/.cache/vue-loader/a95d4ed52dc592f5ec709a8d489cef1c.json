{"remainingRequest":"D:\\Desktop\\MisionTic2022\\Tienda\\tienda\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Desktop\\MisionTic2022\\Tienda\\tienda\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Desktop\\MisionTic2022\\Tienda\\tienda\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Desktop\\MisionTic2022\\Tienda\\tienda\\src\\views\\Registro.vue?vue&type=template&id=37a51e26&","dependencies":[{"path":"D:\\Desktop\\MisionTic2022\\Tienda\\tienda\\src\\views\\Registro.vue","mtime":1632270276647},{"path":"D:\\Desktop\\MisionTic2022\\Tienda\\tienda\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632170343954},{"path":"D:\\Desktop\\MisionTic2022\\Tienda\\tienda\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1632170353261},{"path":"D:\\Desktop\\MisionTic2022\\Tienda\\tienda\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632170343954},{"path":"D:\\Desktop\\MisionTic2022\\Tienda\\tienda\\node_modules\\vue-loader\\lib\\index.js","mtime":1632170350305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}