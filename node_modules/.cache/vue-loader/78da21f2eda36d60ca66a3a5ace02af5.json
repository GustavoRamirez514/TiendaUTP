{"remainingRequest":"C:\\Users\\GUSTAVO RAMIREZ\\WorkPlace\\tienda\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\GUSTAVO RAMIREZ\\WorkPlace\\tienda\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\GUSTAVO RAMIREZ\\WorkPlace\\tienda\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\GUSTAVO RAMIREZ\\WorkPlace\\tienda\\src\\views\\Productos.vue?vue&type=template&id=8b793e6e&scoped=true&","dependencies":[{"path":"C:\\Users\\GUSTAVO RAMIREZ\\WorkPlace\\tienda\\src\\views\\Productos.vue","mtime":1632182806914},{"path":"C:\\Users\\GUSTAVO RAMIREZ\\WorkPlace\\tienda\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632176248122},{"path":"C:\\Users\\GUSTAVO RAMIREZ\\WorkPlace\\tienda\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1632176314977},{"path":"C:\\Users\\GUSTAVO RAMIREZ\\WorkPlace\\tienda\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632176248122},{"path":"C:\\Users\\GUSTAVO RAMIREZ\\WorkPlace\\tienda\\node_modules\\vue-loader\\lib\\index.js","mtime":1632176295790}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}